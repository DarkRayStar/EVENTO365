{"ast":null,"code":"import valid from \"card-validator\";\nexport default function validateInfo(values) {\n  let errors = {};\n  let creditCard = valid.number(values.cardNumber);\n  creditCard.expirationDate = valid.expirationDate(values.cardExpiration);\n  creditCard.cvv = valid.cvv(values.cardSecurityCode);\n  creditCard.cardholderName = valid.cardholderName(values.cardName); //creditCard.postalCode = valid.postalCode(values.cardPostalCode);\n\n  errors.show = true;\n  errors.variant = \"danger\";\n  errors.message = \"An unknown error occured. Please try again later\";\n  errors.cname = false;\n  errors.cnumber = false;\n  errors.ctype = false;\n  errors.cexp = false;\n  errors.ccvv = false; //errors.cpostal = false;\n\n  /*if (values.cardPostalCode === null || !values.cardPostalCode.trim()) {\n    errors.message = \"Credit card postal code is not complete\";\n  } else if (creditCard.postalCode.isValid) {\n    errors.cpostal = true;\n  } else {\n    errors.message = \"Credit card postal code is invalid\";\n  }*/\n  //Card CVV expiration\n\n  if (values.cardSecurityCode === null || !values.cardSecurityCode.trim()) {\n    errors.message = \"Credit card CVC is not complete\";\n  } else if (creditCard.cvv.isValid) {\n    errors.ccvv = true;\n  } else {\n    errors.message = \"Credit card CVC is invalid\";\n  } //Card Expiration Verification\n\n\n  if (values.cardExpiration === null || !values.cardExpiration.trim()) {\n    errors.message = \"Credit card expiration date is not complete\";\n  } else if (creditCard.expirationDate.isValid) {\n    errors.cexp = true;\n  } else {\n    errors.message = \"Credit card expiration date is invalid\";\n  } //Card Type Verification\n\n\n  if (values.cardType === null || !values.cardType.trim() || creditCard.card === null) {\n    errors.message = \"Credit card type is not complete\";\n  } else if (creditCard.card.type && creditCard.card.type.toUpperCase() === values.cardType.toUpperCase()) {\n    errors.ctype = true;\n  } else {\n    errors.message = \"Credit card type is invalid\";\n  } //Card Number Verification\n\n\n  if (values.cardNumber === null || !values.cardNumber.trim()) {\n    errors.message = \"Credit card number is not complete\";\n  } else if (creditCard.isValid) {\n    errors.cnumber = true;\n  } else {\n    errors.message = \"Credit card number is invalid\";\n  } //Cardholder Name Verification\n\n\n  if (values.cardName === null || !values.cardName.trim()) {\n    errors.message = \"Cardholder name is not complete\";\n  } else if (creditCard.cardholderName.isValid) {\n    errors.cname = true;\n  } else {\n    errors.message = \"Cardholder name is invalid\";\n  }\n\n  if (errors.ctype && errors.cname && errors.cnumber && errors.cexp && //errors.cpostal &&\n  errors.ccvv) {\n    errors.variant = \"success\";\n    errors.message = \"Credit Card is valid\";\n  }\n\n  return errors;\n}","map":{"version":3,"sources":["C:/Users/dulsh/Desktop/ITP_DOWNLOADED/itp_project-kdy-_2021_-wd02-main/Evento365/evento_frontend/react-frontend/src/PaymentHandlingComponents/validateInfo.js"],"names":["valid","validateInfo","values","errors","creditCard","number","cardNumber","expirationDate","cardExpiration","cvv","cardSecurityCode","cardholderName","cardName","show","variant","message","cname","cnumber","ctype","cexp","ccvv","trim","isValid","cardType","card","type","toUpperCase"],"mappings":"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","sourcesContent":["import valid from \"card-validator\";\n\nexport default function validateInfo(values) {\n  let errors = {};\n  let creditCard = valid.number(values.cardNumber);\n\n  creditCard.expirationDate = valid.expirationDate(values.cardExpiration);\n  creditCard.cvv = valid.cvv(values.cardSecurityCode);\n  creditCard.cardholderName = valid.cardholderName(values.cardName);\n  //creditCard.postalCode = valid.postalCode(values.cardPostalCode);\n\n  errors.show = true;\n  errors.variant = \"danger\";\n  errors.message = \"An unknown error occured. Please try again later\"\n  errors.cname = false;\n  errors.cnumber = false;\n  errors.ctype = false;\n  errors.cexp = false;\n  errors.ccvv = false;\n  //errors.cpostal = false;\n\n  /*if (values.cardPostalCode === null || !values.cardPostalCode.trim()) {\n    errors.message = \"Credit card postal code is not complete\";\n  } else if (creditCard.postalCode.isValid) {\n    errors.cpostal = true;\n  } else {\n    errors.message = \"Credit card postal code is invalid\";\n  }*/\n\n  //Card CVV expiration\n  if (values.cardSecurityCode === null || !values.cardSecurityCode.trim()) {\n    errors.message = \"Credit card CVC is not complete\";\n  } else if (creditCard.cvv.isValid) {\n    errors.ccvv = true;\n  } else {\n    errors.message = \"Credit card CVC is invalid\";\n  }\n\n  //Card Expiration Verification\n  if (values.cardExpiration === null || !values.cardExpiration.trim()) {\n    errors.message = \"Credit card expiration date is not complete\";\n  } else if (creditCard.expirationDate.isValid) {\n    errors.cexp = true;\n  } else {\n    errors.message = \"Credit card expiration date is invalid\";\n  }\n\n  //Card Type Verification\n  if (\n    values.cardType === null ||\n    !values.cardType.trim() ||\n    creditCard.card === null\n  ) {\n    errors.message = \"Credit card type is not complete\";\n  } else if (\n    creditCard.card.type &&\n    creditCard.card.type.toUpperCase() === values.cardType.toUpperCase()\n  ) {\n    errors.ctype = true;\n  } else {\n    errors.message = \"Credit card type is invalid\";\n  }\n\n  //Card Number Verification\n  if (values.cardNumber === null || !values.cardNumber.trim()) {\n    errors.message = \"Credit card number is not complete\";\n  } else if (creditCard.isValid) {\n    errors.cnumber = true;\n  } else {\n    errors.message = \"Credit card number is invalid\";\n  }\n\n  //Cardholder Name Verification\n  if (values.cardName === null || !values.cardName.trim()) {\n    errors.message = \"Cardholder name is not complete\";\n  } else if (creditCard.cardholderName.isValid) {\n    errors.cname = true;\n  } else {\n    errors.message = \"Cardholder name is invalid\";\n  }\n\n  if (\n    errors.ctype &&\n    errors.cname &&\n    errors.cnumber &&\n    errors.cexp &&\n    //errors.cpostal &&\n    errors.ccvv\n  ) {\n    errors.variant = \"success\";\n    errors.message = \"Credit Card is valid\";\n  }\n\n      \n\n \n\n  return errors;\n}"]},"metadata":{},"sourceType":"module"}